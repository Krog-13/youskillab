# Generated by Django 5.2 on 2025-04-08 16:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=2, help_text="Patient's weight in kilograms (e.g., 70.50)", max_digits=5, verbose_name='Weight (kg)')),
                ('height', models.DecimalField(decimal_places=2, help_text="Patient's height in centimeters (e.g., 175.30)", max_digits=5, verbose_name='Height (cm)')),
                ('hemoglobin', models.DecimalField(blank=True, decimal_places=1, help_text='Hemoglobin level in blood (e.g., 130.5 g/L)', max_digits=5, null=True, verbose_name='Hemoglobin (g/L)')),
                ('leukocytes', models.DecimalField(blank=True, decimal_places=1, help_text='White blood cell count (e.g., 7.5 x 10⁹/L)', max_digits=5, null=True, verbose_name='Leukocytes (10⁹/L)')),
                ('erythrocytes', models.DecimalField(blank=True, decimal_places=2, help_text='Red blood cell count (e.g., 4.50 x 10¹²/L)', max_digits=5, null=True, verbose_name='Erythrocytes (10¹²/L)')),
                ('glucose', models.DecimalField(blank=True, decimal_places=1, help_text='Blood sugar level (e.g., 5.5 mmol/L)', max_digits=4, null=True, verbose_name='Glucose (mmol/L)')),
                ('iron', models.DecimalField(blank=True, decimal_places=1, help_text='Serum iron level (e.g., 15.0 µmol/L)', max_digits=5, null=True, verbose_name='Iron (µmol/L)')),
                ('vitamin_d3', models.DecimalField(blank=True, decimal_places=1, help_text='25-hydroxyvitamin D level (e.g., 30.0 ng/mL)', max_digits=5, null=True, verbose_name='Vitamin D3 (ng/mL)')),
                ('fecal_occult_blood', models.BooleanField(default=False, help_text='Presence of hidden blood in stool (True/False)', verbose_name='Fecal Occult Blood')),
                ('fecal_calprotectin', models.DecimalField(blank=True, decimal_places=1, help_text='Marker of inflammation in stool (e.g., 50.0 µg/g)', max_digits=5, null=True, verbose_name='Calprotectin (µg/g)')),
                ('date_recorded', models.DateTimeField(auto_now_add=True, help_text='When this data was recorded', verbose_name='Date Recorded')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(help_text='Your position, e.g., Software Engineer', max_length=100, verbose_name='job title')),
                ('company_name', models.CharField(help_text='Name of the company', max_length=100, verbose_name='company name')),
                ('profession', models.CharField(default='freelancer', max_length=100, verbose_name='profession')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthday', models.DateField(verbose_name='birthday')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='phone number')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='gender')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar', verbose_name='avatar')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
